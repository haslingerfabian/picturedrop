/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getAllSubmissionItems } from '../fn/submission-items/get-all-submission-items';
import { GetAllSubmissionItems$Params } from '../fn/submission-items/get-all-submission-items';
import { getSubmissionItemById } from '../fn/submission-items/get-submission-item-by-id';
import { GetSubmissionItemById$Params } from '../fn/submission-items/get-submission-item-by-id';
import { SubmissionItem } from '../models/submission-item';

@Injectable({ providedIn: 'root' })
export class SubmissionItemsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getAllSubmissionItems()` */
  static readonly GetAllSubmissionItemsPath = '/api/submissionItems';

  /**
   * Get all submission items.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllSubmissionItems()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllSubmissionItems$Response(params?: GetAllSubmissionItems$Params, context?: HttpContext): Observable<StrictHttpResponse<SubmissionItem>> {
    return getAllSubmissionItems(this.http, this.rootUrl, params, context);
  }

  /**
   * Get all submission items.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllSubmissionItems$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllSubmissionItems(params?: GetAllSubmissionItems$Params, context?: HttpContext): Observable<SubmissionItem> {
    return this.getAllSubmissionItems$Response(params, context).pipe(
      map((r: StrictHttpResponse<SubmissionItem>): SubmissionItem => r.body)
    );
  }

  /** Path part for operation `getSubmissionItemById()` */
  static readonly GetSubmissionItemByIdPath = '/api/submissionItems/{id}';

  /**
   * Get submission item by id.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getSubmissionItemById()` instead.
   *
   * This method doesn't expect any request body.
   */
  getSubmissionItemById$Response(params: GetSubmissionItemById$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return getSubmissionItemById(this.http, this.rootUrl, params, context);
  }

  /**
   * Get submission item by id.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getSubmissionItemById$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getSubmissionItemById(params: GetSubmissionItemById$Params, context?: HttpContext): Observable<void> {
    return this.getSubmissionItemById$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
